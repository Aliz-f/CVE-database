from django.test import TestCase
import json
from django.urls import reverse
from rest_framework import status
from rest_framework.test import APIClient

# Create your tests here.
class nvdTestcase(TestCase):
    def testValid_create_product(self):
        #*** Create product
        data = {"name":"winrar", "vendor":"rarlab", "type":"application"}
        client = APIClient()
        response = client.post(reverse('product'),
            data=json.dumps(data), content_type='application/json')
        self.assertEqual(response.status_code, status.HTTP_201_CREATED)
    
        #*** Get product with version
        params = {"product":"winrar", "vendor":"rarlab", "version":"5.70"}
        response = client.get(reverse('product')+f'?product={params["product"]}&vendor={params["vendor"]}&version={params["version"]}')
        print(response.content)
        self.assertEqual(response.status_code, status.HTTP_200_OK)
    
        #*** Get product with version and edition
        params = {"product":"winrar", "vendor":"rarlab", "version":"5.70", "edition":"beta1"}
        response = client.get(reverse('product')+f'?product={params["product"]}&vendor={params["vendor"]}&version={params["version"]}&edition={params["edition"]}')
        print(response.content)
        self.assertEqual(response.status_code, status.HTTP_200_OK)

    def testInValid_create_product(self):
        #*** Create product with error
        data = {"name":"winrar", "vendor":"rarlab", "type":"os"}
        client = APIClient()
        response = client.post(reverse('product'),
            data=json.dumps(data), content_type='application/json')
        self.assertEqual(response.status_code, status.HTTP_406_NOT_ACCEPTABLE)
    